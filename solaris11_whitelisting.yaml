---
- name: Whitelisting Users with require_membership_of in pam_winbind.conf (Solaris 11)
  hosts: all
  become: true

  vars:
    # Example: Configure the following variables during runtime
    # add_members: ["newuser1@WIKILAB", "newuser2@WIKILAB"]  # List of members to add (format: username@DOMAIN)
    # remove_members: ["tdsaiful@WIKILAB"]                   # List of members to remove (format: username@DOMAIN)

  tasks:
    - name: Extract OS major version from facts
      set_fact:
        ansible_distribution_major_version: "{{ ansible_distribution_version.split('.')[0] }}"

    - name: Check the OS distribution supported for this play
      fail:
        msg: "This playbook can only be run on Solaris 11. You are running {{ ansible_distribution }} version {{ ansible_distribution_version }}."
      when: 
        - ansible_distribution != "Solaris" or ansible_distribution_major_version not in ["10"]
  
    - name: Check if require_membership_of is enabled
      shell: "egrep '^require_membership_of =' /etc/security/pam_winbind.conf"
      register: require_membership_of_check
      ignore_errors: yes
      changed_when: false

    - name: Fail if require_membership_of is not enabled
      fail:
        msg: "The 'require_membership_of' parameter is not enabled in /etc/security/pam_winbind.conf."
      when: require_membership_of_check.rc != 0

    - name: Update require_membership_of in pam_winbind.conf
      block:
        - name: Get the existing require_membership_of list
          shell: "awk -F '=' '/^require_membership_of/ {print $2}' /etc/security/pam_winbind.conf"
          register: current_members_raw
          changed_when: false

        - name: Set current require_membership_of list
          set_fact:
            current_members: "{{ current_members_raw.stdout.split(',') | map('trim') | select('match', '.+') | list }}"
          when: current_members_raw.stdout != ""

        - name: Update require_membership_of list
          set_fact:
            updated_require_membership_of: "{{ (current_members + add_members) | difference(remove_members) | unique | list }}"

        - name: Write require_membership_of to pam_winbind.conf
          lineinfile:
            path: /etc/security/pam_winbind.conf
            regexp: '^require_membership_of'
            line: "require_membership_of = {{ updated_require_membership_of | join(',') }}"
            create: true
            backup: true

    - name: Restart winbind service to apply changes
      service:
        name: winbind
        state: restarted
